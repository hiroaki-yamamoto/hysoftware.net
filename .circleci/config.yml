version: 2
workflows:
  version: "2"
  jobs:
    - build:
      filters:
        branches:
          ignore: gh-pages
jobs:
  build:
    docker:
      - image: python:latest
        environment:
          DJANGO_SETTINGS_FACTORY: app.settings.testing.TestConfig
          RECAPTCHA_TESTING: "True"
          node_mode: production
          DB_DEFAULT_ENGINE: "django.db.backends.postgresql"
          DB_DEFAULT_NAME: circleci
          DB_DEFAULT_USER: circleci
          DB_DEFAULT_PASSWORD: circleci
          DB_DEFAULT_HOST: localhost
          DB_DEFAULT_PORT: 5432
      - image: postgres:latest
        environment:
          POSTGRES_DB: circleci
          POSTGRES_USER: circleci
          POSTGRES_PASSWORD: circleci
    working_directory: ~/hysoftware
    steps:
      - checkout
      - run:
          name: "Install NodeJS 7 and Yarn"
          command: |
            curl -sL https://deb.nodesource.com/setup_8.x | bash -
            curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
            echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
            apt-get update -qq
            apt-get install -y -qq nodejs yarn
      - restore_cache:
          keys:
            - hysoftware-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - hysoftware-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: "Install Frontend Dependencies"
          command: >
            yarn --ignore-scripts &&
            npm rebuild node-sass &&
            yarn run install -- --allow-root
      - run:
          name: "Make virtual environemnt"
          command: "python -m venv venv"
      - run:
          name: "Install backend dependencies"
          command: >
            source ./venv/bin/activate &&
            pip install -r requirements.txt
      - save_cache:
          key: hysoftware-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - "~/.yarn-cache"
      - save_cache:
          key: hysoftware-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "./venv"
      - run:
          name: "Migrate"
          command: >
            source ./venv/bin/activate &&
            python manage.py migrate
      - run:
          name: "Test&Compile"
          command: $(npm bin)/gulp
      - run:
          name: "Deploy code coverage"
          command: >
            source ./venv/bin/activate &&
            coveralls &&
            codeclimate-test-reporter &&
            deactivate
      - deploy:
        command: >
          if git rev-parse --quiet --verify gh-pages > /dev/null; then
            git checkout gh-pages
          else
            git checkout -b gh-pages
          fi
          git merge --no-ff --no-edit ${CIRCLE_BRANCH}
          source ./venv/bin/activate &&
          python manage.py collectstatic &&
          deactivate
          sed -i -e 's@staticfiles@@g' .gitignore
          git add .
          git config --global user.email "build@circle" > /dev/null 2>&1
          git config --global user.name "Circle CI" > /dev/null 2>&1
          git commit -m "Static files for ${CIRCLE_SHA1}" > /dev/null 2>&1
          git push https://hiroaki-yamamoto:${STATIC_FILE_DEPLOY_KEY}@github.com/hysoftware/hysoftware.net > /dev/null 2>&1
          git checkout ${CIRCLE_BRANCH}
